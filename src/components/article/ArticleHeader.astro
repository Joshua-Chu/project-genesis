---
import { getFormattedDate } from "@/utils/date";
import type { CollectionEntry } from "astro:content";

interface Props {
  article: CollectionEntry<"article">;
}

const { article } = Astro.props;
const {
  data: { title, publishDate, updatedDate, tags },
  render,
} = article;
const { remarkPluginFrontmatter } = await render();
const publishedDateFormatted = getFormattedDate(publishDate);
const updatedDateFormatted = getFormattedDate(updatedDate || publishDate);
---

<div class="header">
  <h1 class="header__title">
    {title}
  </h1>
  <div class="header__meta-container">
    <div>
      <span class="header__meta-publish">
        {publishedDateFormatted}
      </span>
      <span class="header__meta-separator">/</span>
      <span class="header__meta-minutes"
        >{remarkPluginFrontmatter.minutesRead}</span
      >
    </div>
    <p class="header__meta-updated">Last Updated: {updatedDateFormatted}</p>
  </div>
  <div class="header__tags">
    {
      tags.map((tag) => (
        <a
          href={`/tags/${tag}`}
          class="header__tag"
          aria-label={`View more articles with the tag ${tag}`}
        >
          #{tag}
        </a>
      ))
    }
  </div>
</div>

<style lang="scss">
  @import "@/styles/variables.scss";

  .header {
    margin-block-end: 48px;
    &__title {
      font-size: var(--font-xl);
      margin-block-end: 4px;
      @media (width < 500px) {
        margin-block-end: 8px;
      }
    }

    &__meta-container {
      display: flex;
      align-items: center;
      font-size: var(--font-xs);
      margin-block-end: 4px;

      @media (width < 500px) {
        flex-direction: column;
        align-items: unset;
        gap: 4px;
      }
    }

    &__meta-separator {
      margin-inline: 8px;
    }

    &__meta-minutes {
      margin-inline-end: 16px;
    }

    &__meta-updated {
      background-color: var(--color-yellow);
      color: var(--bg-gray);
      padding-inline: 6px;
      padding-block: 2px;
      border-radius: 8px;

      @media (width < 500px) {
        width: fit-content;
      }
    }

    &__tags {
      display: flex;
      align-items: center;
    }

    &__tag {
      text-decoration: underline;
      text-decoration-color: var(--color-yellow);
      margin-inline-end: 8px;
    }
  }
</style>
