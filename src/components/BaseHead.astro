---
import { siteConfig } from "@/site-config";
import "@/styles/styles.scss";

interface Props {
  title: string;
  description?: string;
  ogImage?: string | undefined;
  articleDate?: string | undefined;
}
const { articleDate, description, ogImage, title } = Astro.props;
const siteTitle = `${title} â€¢ ${siteConfig.title}`;
const socialImageURL = new URL(
  ogImage ? ogImage : "/social-card.png",
  Astro.url,
).href;
---

<meta charset="utf-8" />
<meta
  content="width=device-width, initial-scale=1.0, shrink-to-fit=no"
  name="viewport"
/>
<meta content="IE=edge" http-equiv="X-UA-Compatible" />
<title>{siteTitle}</title>

<!-- Icons -->
<link href="/favicon.ico" rel="icon" sizes="any" />
<link href="/icon.svg" rel="icon" type="image/svg+xml" />

{/* Primary Meta Tags */}
<meta content={siteTitle} name="title" />
<meta content={description} name="description" />
<meta content={siteConfig.author} name="author" />

{/* Open Graph / Facebook */}
<meta content={articleDate ? "article" : "website"} property="og:type" />
<meta content={title} property="og:title" />
<meta content={description} property="og:description" />
<meta content={siteConfig.title} property="og:site_name" />
<meta content={siteConfig.ogLocale} property="og:locale" />
<meta content={socialImageURL} property="og:image" />
<meta content="1200" property="og:image:width" />
<meta content="630" property="og:image:height" />
{
  articleDate && (
    <>
      <meta content={siteConfig.author} property="article:author" />
      <meta content={articleDate} property="article:published_time" />
    </>
  )
}

{/* Twitter */}
<meta content="summary_large_image" property="twitter:card" />
<meta content={title} property="twitter:title" />
<meta content={description} property="twitter:description" />
<meta content={socialImageURL} property="twitter:image" />
